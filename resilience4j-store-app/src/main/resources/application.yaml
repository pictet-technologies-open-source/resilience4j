spring:
  application:
    name:
      resilience4j-store-app
  jackson:
    mapper:
      accept-case-insensitive-enums: true

feign:
  client:
    config:
      default:
        loggerLevel: full

logging:
  level:
    com:
      pictet:
        technologies:
          resilience:
            resilience4j:
              store:
                provider:
                  ExchangeRateClient: info

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: false

resilience4j:
  circuitbreaker:
    circuit-breaker-aspect-order: 100
  retry:
    retry-aspect-order: 1000

resilience4j.circuitbreaker:
  instances:
    exchangeRateService-get:
      failureRateThreshold: 50
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 20
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 10

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - feign.RetryableException
        - feign.FeignException.FeignServerException
        - feign.FeignException.TooManyRequests
        - java.io.IOException
        - java.util.concurrent.TimeoutException



#  instances:
#    backendA:
#      baseConfig: default
#    backendB:
#      baseConfig: default
#
#resilience4j.bulkhead:
#  configs:
#    default:
#      maxConcurrentCalls: 100
#  instances:
#    backendA:
#      maxConcurrentCalls: 10
#    backendB:
#      maxWaitDuration: 10ms
#      maxConcurrentCalls: 20
#
#resilience4j.thread-pool-bulkhead:
#  configs:
#    default:
#      maxThreadPoolSize: 4
#      coreThreadPoolSize: 2
#      queueCapacity: 2
#  instances:
#    backendA:
#      baseConfig: default
#    backendB:
#      maxThreadPoolSize: 1
#      coreThreadPoolSize: 1
#      queueCapacity: 1
#
#resilience4j.ratelimiter:
#  configs:
#    default:
#      registerHealthIndicator: false
#      limitForPeriod: 10
#      limitRefreshPeriod: 1s
#      timeoutDuration: 0
#      eventConsumerBufferSize: 100
#  instances:
#    backendA:
#      baseConfig: default
#    backendB:
#      limitForPeriod: 6
#      limitRefreshPeriod: 500ms
#      timeoutDuration: 3s
#
#resilience4j.timelimiter:
#  configs:
#    default:
#      cancelRunningFuture: false
#      timeoutDuration: 2s
#  instances:
#    backendA:
#      baseConfig: default
#    backendB:
#      baseConfig: default
